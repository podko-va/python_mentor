# Урок: Выбор данных (Data Selection) в Pandas

## Вступление
Сегодня мы изучим, как выбирать данные в DataFrame с помощью различных методов индексирования и фильтрации.
Это очень важно, когда вы работаете с большими наборами данных и хотите анализировать только нужные части.

---

## Методы выбора данных

### 1. .loc[]
Используется для выбора по именам строк и столбцов (label-based selection).

```python
print(df.loc[0:2, ['Name', 'Age']])
```

Это выберет строки с индексами от 0 до 2 включительно и только столбцы "Name" и "Age".

### 2. .iloc[]
Выбирает по числовым индексам (position-based selection).

```python
print(df.iloc[:2])
```

Выводит первые две строки (0 и 1), НЕ включая индекс 2. Работает как обычное срезание списков.

### 3. .at[] и .iat[]
Используются для доступа к конкретной ячейке:
```python
df.at[0, 'Name']  # По имени
df.iat[0, 1]      # По позиции
```

---

## Примеры

### Фильтрация по условию

```python
print(df[df['Age'] > 24])
```

Если нужно отфильтровать по нескольким условиям, используем `&`:

```python
print(df[(df['Age'] > 24) & (df['Score'] >= 88)])
```

‼️ Важно: нельзя использовать `and` или `in` напрямую с Series!

### Поиск по подстроке

```python
print(df[df['Name'].str.contains("a")])
```

Или изменение строки:

```python
df['Name'] = df['Name'].str.upper()
```

---

## Трюки и полезные советы

✅ Всегда проверяйте, что возвращаемый результат — это новый DataFrame.

✅ Если вы используете `.loc[]`, индексы включают правую границу. В отличие от `.iloc[]`, где она не включается.

✅ Для фильтрации строк используйте `df[условие]`, а не `if` или `for`.

✅ При ошибках с `in` или `and` – замените на `.str.contains()` и `&`, `|`.

---

## Практическая ситуация:
Представьте, что вы анализируете таблицу клиентов. Вам нужно выбрать всех клиентов старше 30 лет, у которых имя содержит букву "A", и которые имеют балл выше 85. Это можно сделать так:

```python
df_filtered = df[(df['Age'] > 30) & (df['Name'].str.contains("A")) & (df['Score'] > 85)]
```

---

## Заключение
Выбор данных — это фундаментальный навык для работы с данными. Используя `.loc[]`, `.iloc[]`, фильтры и строковые методы, вы можете очень гибко управлять подмножествами данных.